version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'
    healthcheck:
      test: ['CMD', 'bash', '-c', "echo 'ruok' | nc localhost 2181"]
      interval: 30s
      timeout: 10s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - '9092:9092'
      - '29092:29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test:
        [
          'CMD',
          'kafka-topics',
          '--bootstrap-server',
          'localhost:9092',
          '--list',
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - '8080:8080'
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    restart: unless-stopped

volumes:
  kafka_data:
# version: '3.8'

# services:
#   zookeeper:
#     image: confluentinc/cp-zookeeper:6.2.0
#     container_name: zookeeper
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#       ZOOKEEPER_TICK_TIME: 2000
#       ZOOKEEPER_SYNC_LIMIT: 2
#       ZOOKEEPER_INIT_LIMIT: 5
#     ports:
#       - '2181:2181'
#     networks:
#       - kafka-network
#     healthcheck:
#       test: ['CMD', 'bash', '-c', "echo 'ruok' | nc localhost 2181"]
#       interval: 30s
#       timeout: 10s
#       retries: 5
#       start_period: 30s

#   kafka:
#     image: confluentinc/cp-kafka:6.2.0
#     container_name: kafka
#     depends_on:
#       zookeeper:
#         condition: service_healthy
#     ports:
#       - '9092:9092'
#       - '29092:29092'
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#       KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#       KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#       KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#       KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#       KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
#       KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#       KAFKA_LOG_CLEANUP_POLICY: delete
#       KAFKA_LOG_RETENTION_MS: 604800000
#       KAFKA_LOG_SEGMENT_BYTES: 1073741824
#       KAFKA_NUM_PARTITIONS: 1
#       KAFKA_DEFAULT_REPLICATION_FACTOR: 1
#     volumes:
#       - kafka_data:/var/lib/kafka/data
#     networks:
#       - kafka-network
#     healthcheck:
#       test:
#         [
#           'CMD',
#           'kafka-topics',
#           '--bootstrap-server',
#           'localhost:9092',
#           '--list',
#         ]
#       interval: 30s
#       timeout: 15s
#       retries: 10
#       start_period: 90s

#   kafka-ui:
#     image: provectuslabs/kafka-ui:latest
#     container_name: kafka-ui
#     depends_on:
#       kafka:
#         condition: service_healthy
#     ports:
#       - '8080:8080'
#     environment:
#       KAFKA_CLUSTERS_0_NAME: local
#       KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
#       KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
#       DYNAMIC_CONFIG_ENABLED: 'true'
#     networks:
#       - kafka-network
#     restart: unless-stopped

# volumes:
#   kafka_data:

# networks:
#   kafka-network:
#     driver: bridge
